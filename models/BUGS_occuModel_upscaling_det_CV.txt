
  model{


  #### Training dataset ####

  # State model
  for (i in 1:nsite_train){ 
    for (t in 1:nyear_train){
    
      z[i,t] ~ dbern(muZ[i,t]) 
      
      logit(muZ[i,t])<- int.alpha + inprod(beta[],occDM_train[i,]) + 
                          random.adm[adm_train[i]] + 
                          random.year[t] +
                          eta[i]
      
    }
  }   
  
  ### Observation Model
  for(j in 1:nvisit_train) {
    y_train[j] ~ dbern(Py[j]) #data is Y
    Py[j]<- z[site_train[j],year_train[j]]*p[j] 

    #detection model:
      logit(p[j]) <-  int.d + 
                      beta.effort * Effort[j] +
                      random.det.year[year_train[j]] +
                      random.det.adm[det.adm_train[j]]
                      
    } 
  
  #### Testing dataset ####
  
  # State model
  for (i in 1:nsite_test){ 
    for (t in 1:nyear_test){
    
      z_test[i,t] ~ dbern(muZ_test[i,t]) 
      
      logit(muZ_test[i,t])<- int.alpha + inprod(beta[],occDM_train[i,]) + 
                          random.adm[adm_train[i]] + 
                          random.year[t] +
                          eta[i]
      
    }
  }   
  
  ### Observation Model
  for(j in 1:nvisit_test) {

    Py_test[j]<- z_test[site_test[j],year_test[j]]*p_test[j] 

    #detection model:
      logit(p_test[j]) <-  int.d + 
                      beta.effort * Effort[j] +
                      random.det.year[year_train[j]] +
                      random.det.adm[det.adm_train[j]]
                      
    } 
  

  #Priors 

  # State model priors
    ############################
    
    #intercept
    mean.psi ~ dunif(0, 1)       
    int.alpha <- logit(mean.psi)
 
    for(i in 1:n.covs){
      beta[i] ~ dnorm(0,0.01)
    }
    
    #years
    for(t in 1:nyear_train){
      random.year[t] ~ dnorm(0, tau.a)
    }
    tau.a <- 1/(sd.a * sd.a)
    sd.a ~ dt(0, 1, 1)T(0,) 
    
    #site effects
    for (i in 1:nsite_train) {
      eta[i] ~ dnorm(0, tau2)       
    } 
    tau2 <- 1/(sigma2 * sigma2) 
    sigma2 ~ dt(0, 1, 1)T(0,) 

    #adm effects
    for(i in 1:n.adm_train){
      random.adm[i] ~ dnorm(0,random.adm.tau)
    }
    random.adm.tau <- pow(random.adm.sd,-2)
    random.adm.sd ~ dt(0, 1, 1)T(0,) 

    #Observation model priors
    ##########################
    mean.p ~ dunif(0, 1)        
    int.d <- logit(mean.p)
    
    #year effects
    for (t in 1:nyear_train) {
      random.det.year[t] ~ dnorm(0, tau.lp)            
    }
    tau.lp <- 1 / (sd.lp * sd.lp)                 
    sd.lp ~ dt(0, 1, 1)T(0,)  
    
    #covariate effects
    beta.det.open ~ dnorm(0,0.01)
    beta.effort ~ dnorm(0,0.01)
    
    #adm effects
    for(i in 1:n.adm_train){
      random.det.adm[i] ~ dnorm(0,random.det.adm.tau)
    }
    random.det.adm.tau <- pow(random.adm.sd,-2)
    random.det.adm.sd ~ dt(0, 1, 1)T(0,) 


  }
    
