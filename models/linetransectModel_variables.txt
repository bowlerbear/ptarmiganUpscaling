
    model{

    ########################
    #Model of total density#
    ########################

    #intercept
    int.d ~ dnorm(0,0.001)    
    
    #random line effect
    line.d.sd ~ dunif(0,10)
    line.d.tau <- pow(line.d.sd,-2)
    for(j in 1:nsite){
      random.d.line[j] ~ dnorm(0,line.d.tau)
    }
    
    #random adm effect
    adm.d.sd ~ dunif(0,10)
    adm.d.tau <- pow(adm.d.sd,-2)
    for(j in 1:nadm){
      random.d.adm[j] ~ dnorm(0,adm.d.tau)
    }
    
    #random year effect
    year.d.sd ~ dunif(0,10)
    year.d.tau <- pow(year.d.sd,-2)
    for(t in 1:nyear){
      random.d.year[t] ~ dnorm(0,year.d.tau)
    }

    #random obs effects
    random.d.sd ~ dunif(0,10)
    random.d.tau <- pow(random.d.sd,-2)
    for(t in 1:nyear){
      for(j in 1:nsite){
        random.d.obs[j,t] ~ dnorm(0,random.d.tau)
      }
    }

  
    #covariate effects
    for(i in 1:n.covs){
      beta[i] ~ dnorm(0,0.1)
    }


    #Observation model:
    for(j in 1:nsite){
      for(t in 1:nyear){
        NuIndivs[j,t] ~ dpois(expNuIndivs[j,t])
        expNuIndivs[j,t] <- Density.jt[j,t] * TransectLength[j,t]/1000 * 106/1000 * 2
      }
    }
    
    #State model
    for(j in 1:nsite){
      for(t in 1:nyear){
      
      #linear predictor on density
        log(Density.jt[j,t]) <- int.d + 
                            random.d.line[j] +
                            #random.d.adm [j] +
                            random.d.year[t] +
                            random.d.obs[j,t] +
                            inprod(beta[],occDM[j,]) 

    }}
    
    #for mean Density at observed sites
    for(j in 1:nsite){
      log(Dens_lt[j]) <- int.d + random.d.line[j] + inprod(beta[],occDM[j,]) 
    }
    
  
    #mean density at grids across Norway
    for(j in 1:npreds){
      log(Density.km[j]) <- int.d + inprod(beta[],predDM[j,]) 
      Density[j] <- Density.km[j]*25 # since there are 25 km per grid
    }

    totalPop <- sum(Density)

    #calculate the Bayesian p-value
    e <- 0.0001
    for(j in 1:nsite){
      for(t in 1:nyear){
        chi2[j,t] <- pow((NuIndivs[j,t] - expNuIndivs[j,t]),2) / (sqrt(expNuIndivs[j,t])+e)
        expNuIndivs.new[j,t] ~ dpois(expNuIndivs[j,t]) 
        chi2.new[j,t] <- pow((expNuIndivs.new[j,t] - expNuIndivs[j,t]),2) / (sqrt(expNuIndivs[j,t])+e) # exp
      }
    }
    
    # Add up discrepancy measures for entire data set
    for(t in 1:nyear){
      fit.t[t] <- sum(chi2[,t])                     
      fit.new.t[t] <- sum(chi2.new[,t])             
    }
    fit <- sum(fit.t[])
    fit.new <- sum(fit.new.t[])
    bpv <- step(fit.new - fit)    # Bayesian p-value
    
    }
    
