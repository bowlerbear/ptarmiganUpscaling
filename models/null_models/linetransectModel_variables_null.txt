
    model{
    
    #################
    #Detection model#
    #################
    
    pi <- 3.141593
    
    # priors for fixed effect parms for half-normal detection parm sigma
    b.df.0 ~ dunif(0,20)        

    for(i in 1:ndetections){
    #linear predictor
    mu.df[i] <- b.df.0
    
    # estimate of sd and var, given coeffs above
    sig.df[i] <- exp(mu.df[i])
    sig2.df[i] <- sig.df[i]*sig.df[i]
    
    # effective strip width
    esw[i] <- sqrt(pi * sig2.df[i] / 2) 
    f0[i] <- 1/esw[i] #assuming all detected on the line
    
    # LIKELIHOOD
    # using zeros trick
    L.f0[i] <- exp(-y[i]*y[i] / (2*sig2.df[i])) * 1/esw[i] #y are the distances
    nlogL.f0[i] <-  -log(L.f0[i])
    zeros.dist[i] ~ dpois(nlogL.f0[i])
    }

    #using this model and predicted group size (below), get predicted ESW 
    for(t in 1:nyear){
      for(j in 1:nsite){
        pred.sig[j,t] <- exp(b.df.0) 
        pred.sig2[j,t] <- pow(pred.sig[j,t],2)
        predESW[j,t] <- sqrt(pi * pred.sig2[j,t] / 2)
      }
    }

    ########################
    #Model of total density#
    ########################

    #intercept
    int.d ~ dnorm(0,0.001)    
    
    #Observation model:
    r ~ dunif(0,50)
    for(j in 1:nsite){
      for(t in 1:nyear){
      
        NuIndivs[j,t] ~ dnegbin(p[j,t],r)
        
        p[j,t] <- r/(r+expNuIndivs[j,t])
        
        #NuIndivs[j,t] ~ dpois(expNuIndivs[j,t])
        
        expNuIndivs[j,t] <- Density.jt[j,t] * TransectLength[j,t]/1000 * predESW[j,t]/1000 * 2
        
      }
    }
    
    #State model
    for(j in 1:nsite){
      for(t in 1:nyear){
      
      #linear predictor on density
        log(Density.jt[j,t]) <- int.d
        
    }}
    
    #predict observations - original scale and density scale
    for(j in 1:nsite){
      meanDensity[j] <- mean(Density.jt[j,])
      mid.expNuIndivs[j] <- expNuIndivs[j,6]
    }
  
  
    #mean density at grids across Norway
    for(j in 1:n.preds){
      for(t in 1:nyear){
      
      #for each grid
      log(Density.km.pt[j,t]) <- int.d 
      
      Density.pt[j,t] <- Density.km.pt[j,t]*25
                            
      }
      
      Density.km.p[j] <- mean(Density.km.pt[j,])#mean per year
      Density.p[j] <- Density.km.p[j]*25 # since there are 25 km per grid
    }
  
    #calculate the Bayesian p-value - at the site-level
    
    #get expected values per site
    for(j in 1:nsite){
      for(t in 1:nyear){ 

        #expected value of model
        exp[j,t] <- (r*(1-p[j,t]))/p[j,t]
        
        #new samples
        NuIndivs.new[j,t] ~ dnegbin(p[j,t],r)
        
      }
      
      #get means since we are just interested in spatial variation
      exp.j[j] <- mean(exp[j,])
      NuIndivs.j[j] <- mean(NuIndivs[j,])
      NuIndivs.new.j[j] <- mean(NuIndivs.new[j,])
      mad.diff[j] <- abs(exp.j[j] - NuIndivs.j[j])
      
    }
    
    #get MAD
    MAD <- mean(mad.diff)
    
    #do discrepancy for each site F-T 
    for(j in 1:nsite){
        #compared to data
        chi2[j] <- pow((pow(NuIndivs.j[j], 0.5) - pow(exp.j[j], 0.5)),2)
        
        #compared to simulated values
        chi2.new[j] <- pow((pow(NuIndivs.new.j[j], 0.5) - pow(exp.j[j], 0.5)),2) 
        
    }
    
    # Add up discrepancy measures for entire data set
      fit <- sum(chi2)
      fit.new <- sum(chi2.new)
      
      test <- step(fit.new-fit) 	
      bpv <- mean(test)
    
    }
    
