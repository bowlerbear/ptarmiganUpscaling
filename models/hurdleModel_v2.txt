
    model {
    
    #Model to predict site suitability
    ##################################

    # Priors
    mean.p ~ dunif(0, 1)         # Detection intercept on prob. scale
    int.p <- logit(mean.p)      # Detection intercept
  
    mean.psi ~ dunif(0, 1)       # Occupancy intercept on prob. scale
    int.psi <- logit(mean.psi)     # Occupancy intercept


    #random site effect on occupancy
    for(i in 1:nsite){
      random.o.site[i] ~ dnorm(0,random.o.site.tau)
    }
    random.o.site.tau <- pow(random.o.site.sd,-2)
    random.o.site.sd ~ dunif(0,10)

    #adm effects on occupancy
    for(i in 1:n.adm){
      random.o.adm[i] ~ dnorm(0,random.o.adm.tau)
    }
    random.o.adm.tau <- pow(random.o.adm.sd,-2)
    random.o.adm.sd ~ dunif(0,10)

    #adm2 effects on occupancy
    for(i in 1:n.adm2){
      random.o.adm2[i] ~ dnorm(0,random.o.adm2.tau)
    }
    random.o.adm2.tau <- pow(random.o.adm2.sd,-2)
    random.o.adm2.sd ~ dunif(0,10)

    #random year effect
    for(i in 1:nyear){
      random.o.year[i] ~ dnorm(0,random.o.year.tau)
    }
    random.o.year.tau <- pow(random.o.year.sd,-2)
    random.o.year.sd ~ dunif(0,10)

    #other covariates for detection
    beta.e  ~ dnorm(0,0.01)
    beta.e2  ~ dnorm(0,0.01)
    beta.d  ~ dnorm(0,0.01)

    # State model
    for (i in 1:nsite){ 

      for (t in 1:nyear){
    
      z[i,t] ~ dbern(muZ[i,t]) 
    
      logit(muZ[i,t]) <- int.psi + random.o.site[i] + random.o.adm[adm[i]] +
                          random.o.adm2[adm2[i]] + random.o.year[t] 

      }
    }   
    
    ### Observation Model
    for(j in 1:nvisit) {
    
      y[j] ~ dbern(Py[j]) #data is Y
    
      Py[j]<- z[site[j],year[j]]*p[j] #probability to detect = prob of occ * prob of detection
    
      #detection model:
      logit(p[j]) <-  int.p + beta.e * Effort[j] + beta.e2 * Effort2[j] + beta.d * Density[site[j]]

    }


    #get mean occupancy for each site over time
    for(j in 1:nsite){
      meanZ[j] <- mean(z[j,])
    }

    #Model the abundance at line transect grids 
    ##############################################################

    #intercept
    int.d ~ dnorm(0,0.001)    
    
    #random site effect on abundance
    for(i in 1:nsite){
      random.a.site[i] ~ dnorm(0,random.a.site.tau)
    }
    random.a.site.tau <- pow(random.a.site.sd,-2)
    random.a.site.sd ~ dunif(0,10)
    
    #adm effects on abundance
    for(i in 1:n.adm){
      random.a.adm[i] ~ dnorm(0,random.a.adm.tau)
    }
    random.a.adm.tau <- pow(random.a.adm.sd,-2)
    random.a.adm.sd ~ dunif(0,10)
    
    #adm2 effects on abundance
    for(i in 1:n.adm2){
      random.a.adm2[i] ~ dnorm(0,random.a.adm2.tau)
    }
    random.a.adm2.tau <- pow(random.a.adm2.sd,-2)
    random.a.adm2.sd ~ dunif(0,10)
    
    #random year effect
    for(i in 1:nyear){
      random.a.year[i] ~ dnorm(0,random.a.year.tau)
    }
    random.a.year.tau <- pow(random.a.year.sd,-2)
    random.a.year.sd ~ dunif(0,10)


    #Work out the fraction of the both that was surveyed
    ESW.tauLT <- pow(ESW.sdLT,-2)
    for(j in 1:nsite){
      for(t in 1:nyear){
        predESW[j,t] ~ dnorm(ESW.meanLT[j,t],ESW.tauLT[j,t])
        surveyArea[j,t] <- TransectLengthLT[j,t]/1000 * predESW[j,t]/1000 * 2
        surveyFraction[j,t] <- surveyArea[j,t]/25
      }
    }

    #Observation model:
    for(j in 1:nsite){
      for(t in 1:nyear){
        NuIndivsLT[j,t] ~ dpois(expNuIndivs[j,t])
        expNuIndivs[j,t] <- Density[j,t] * surveyFraction[j,t]
      }
    }
    
    #State model to observed data
    for(j in 1:nsite){
      for(t in 1:nyear){
          log(Density[j,t]) <- int.d + random.a.site[j] + random.a.adm[adm[j]] + 
                                random.a.adm2[adm2[j]] + random.a.year[t] 
      }
    }

    for(j in 1:nsite){
      meanDensity[j] <- mean(Density[j,])
    }


    #Predict realized abundance, across all sites, i.e. suitability * abundance
    for(j in 1:nsite){
      realAbund[j] ~ dpois(meanDensity[j] * meanZ[j])
    }

    totAbund<-sum(realAbund)

    }
    
