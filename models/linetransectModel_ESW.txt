
    model{

    #################
    #Detection model#
    #################
    
    pi <- 3.141593
    
    # priors for fixed effect parms for half-normal detection parm sigma
    b.df.0 ~ dunif(0,20)        
    b.group.size ~ dnorm(0,0.001)

    for(i in 1:ndetections){
    #linear predictor
    mu.df[i] <- b.df.0 + b.group.size * ln_GroupSize[i] 
    #mu.df[i] <- b.df.0  
    
    # estimate of sd and var, given coeffs above
    sig.df[i] <- exp(mu.df[i])
    sig2.df[i] <- sig.df[i]*sig.df[i]
    
    # effective strip width
    esw[i] <- sqrt(pi * sig2.df[i] / 2) 
    f0[i] <- 1/esw[i] #assuming all detected on the line
    
    # LIKELIHOOD
    # using zeros trick
    #y[i] ~ dunif(0,W) 
    L.f0[i] <- exp(-y[i]*y[i] / (2*sig2.df[i])) * 1/esw[i] #y are the distances
    nlogL.f0[i] <-  -log(L.f0[i])
    zeros.dist[i] ~ dpois(nlogL.f0[i])
    }

    #using this model and predicted group size (below), get predicted ESW 
    for(t in 1:nyear){
      for(j in 1:nsite){
        pred.sig[j,t] <- exp(b.df.0 + b.group.size * log(predGroupSize[j,t]+1)) 
        #pred.sig[j,t] <- exp(b.df.0)
        pred.sig2[j,t] <- pow(pred.sig[j,t],2)
        predESW[j,t] <- sqrt(pi * pred.sig2[j,t] / 2)
      }
    }

    ##################
    #Group size model#
    ##################
    
    #priors
    int.gs ~ dnorm(0,0.001)    
    
    #random line effect
    site.sd ~ dunif(0,10)
    site.tau <- pow(site.sd,-2)
    for(j in 1:nsite){
      random.gs.site[j] ~ dnorm(0,site.tau)
    }
    
    #random year effect
    year.sd ~ dunif(0,10)
    year.tau <- pow(year.sd,-2)
    for(t in 1:nyear){
      random.gs.year[t] ~ dnorm(0, year.tau)
    }
    
    #Model
    #for each detection, model group size
    for(i in 1:ndetections){
      GroupSize[i] ~ dpois(expGroupSize[i])
      log(expGroupSize[i]) <- int.gs + 
      random.gs.year[detectionYear[i]] + 
      random.gs.site[detectionSite[i]] 
    }
    
    #using this model, get predicted group size for each line and year
    for(t in 1:nyear){
      for(j in 1:nsite){
        log(predGroupSize[j,t]) <- int.gs + random.gs.year[t] + random.gs.site[j] 
      }
    }

    }
    
