
    model {
    
    # Priors
    mean.p ~ dunif(0, 1)         # Detection intercept on prob. scale
    int.p <- logit(mean.p)      # Detection intercept
  
    mean.psi ~ dunif(0, 1)       # Occupancy intercept on prob. scale
    int.psi <- logit(mean.psi)     # Occupancy intercept

    #occupancy covarites
    for(i in 1:n.covs){
      beta[i] ~ dnorm(0,0.1)
    }

    #adm effects
    for(i in 1:n.adm){
      random.adm[i] ~ dnorm(0,random.adm.tau)
    }
    random.adm.tau <- pow(random.adm.sd,-2)
    random.adm.sd ~ dunif(0,10)

    #adm2 effects
    for(i in 1:n.adm2){
      random.adm2[i] ~ dnorm(0,random.adm2.tau)
    }
    random.adm2.tau <- pow(random.adm2.sd,-2)
    random.adm2.sd ~ dunif(0,10)

    #years
    for(t in 1:nyear){
      a[t] ~ dnorm(0, tau.a)
    }
    tau.a <- 1/(sd.a * sd.a)
    sd.a ~ dunif(0,10) 
    
    #site effects
    for (i in 1:nsite) {
      eta[i] ~ dnorm(0, tau2)       
    } 
    tau2 <- 1/(sigma2 * sigma2) 
    sigma2 ~ dunif(0,10)

    #detection covariates
    for(i in 1:n.adm){
      random.adm.p[i] ~ dnorm(0,random.adm.p.tau)
    }
    random.adm.p.tau <- pow(random.adm.p.sd,-2)
    random.adm.p.sd ~ dunif(0,10)
    
    #adm2 effects
    for(i in 1:n.adm2){
    random.adm2.p[i] ~ dnorm(0,random.adm2.p.tau)
    }
    random.adm2.p.tau <- pow(random.adm2.p.sd,-2)
    random.adm2.p.sd ~ dunif(0,10)

    # Likelihood
    for (j in 1:nsite) {
      for( t in 1:nyear){
        
        # True state model for the partially observed true state
        z[j,t] ~ dbern(psi[j,t])      # True occupancy z at site j in year t
        logit(psi[j,t]) <- int.psi
        #random.adm[adm[j]] + random.adm2[adm2[j]]
        #inprod(beta.det[],occDM[site[j],])
        
        # Observation model for the actual observations
        for (v in 1:nvisit) {
        y[j,t,v] ~ dbern(p.eff[j,t,v])    # Detection-nondetection at each v
        p.eff[j,t,v] <- z[j,t] * p[j,t,v]  
        logit(p[j,t,v]) <- int.p 
        #random.adm.p[adm[j]] + random.adm2.p[adm2[j]]
      }
      }
      }
    
    }
    
